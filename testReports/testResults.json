{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-18T12:02:57.371Z",
    "end": "2024-06-18T12:03:36.548Z",
    "duration": 39177,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3b0e924b-5bec-47fb-94d6-74228951fed1",
      "title": "",
      "fullFile": "C:\\Users\\Mate\\Desktop\\seleniumDemo\\tests\\paramTest.js",
      "file": "\\tests\\paramTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ceb8ee25-9385-477f-a4ea-dc6bf365edfc",
          "title": "add another todo test",
          "fullFile": "C:\\Users\\Mate\\Desktop\\seleniumDemo\\tests\\paramTest.js",
          "file": "\\tests\\paramTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully adds another todo for browser Chrome, 93.0, Windows 10",
              "fullTitle": "add another todo test Successfully adds another todo for browser Chrome, 93.0, Windows 10",
              "timedOut": null,
              "duration": 14990,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Dinamikusan importáljuk a Chai modult\n            const chai = await import(\"chai\")\n            const should = chai.should()\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].platformName = os\n            lambdaTestCapabilities.capabilities.browserName = browser\n            lambdaTestCapabilities.capabilities.browserVersion = bVersion\n            // lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.currentTest.title\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.test.title\n            driver = new Builder().usingServer(gridURL).withCapabilities(lambdaTestCapabilities.capabilities).build()\n            await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n            await driver\n            .findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Selenium\", Key.RETURN);\n            const todoText = await driver\n            .findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n            todoText.should.equal(\"Learn Selenium\")\n            await driver.quit();\n            console.log(new Date().toLocaleString(\"hu-HU\"))",
              "err": {},
              "uuid": "fe5f728f-d92c-407e-8f18-ba5dc65ccdeb",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully adds another todo for browser Firefox, 91.0, Windows 10",
              "fullTitle": "add another todo test Successfully adds another todo for browser Firefox, 91.0, Windows 10",
              "timedOut": null,
              "duration": 10967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Dinamikusan importáljuk a Chai modult\n            const chai = await import(\"chai\")\n            const should = chai.should()\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].platformName = os\n            lambdaTestCapabilities.capabilities.browserName = browser\n            lambdaTestCapabilities.capabilities.browserVersion = bVersion\n            // lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.currentTest.title\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.test.title\n            driver = new Builder().usingServer(gridURL).withCapabilities(lambdaTestCapabilities.capabilities).build()\n            await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n            await driver\n            .findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Selenium\", Key.RETURN);\n            const todoText = await driver\n            .findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n            todoText.should.equal(\"Learn Selenium\")\n            await driver.quit();\n            console.log(new Date().toLocaleString(\"hu-HU\"))",
              "err": {},
              "uuid": "d6ed2f2e-5fe2-4b33-8f88-0528f32eab9c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully adds another todo for browser Firefox, 90.0, Windows 10",
              "fullTitle": "add another todo test Successfully adds another todo for browser Firefox, 90.0, Windows 10",
              "timedOut": null,
              "duration": 13031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Dinamikusan importáljuk a Chai modult\n            const chai = await import(\"chai\")\n            const should = chai.should()\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].platformName = os\n            lambdaTestCapabilities.capabilities.browserName = browser\n            lambdaTestCapabilities.capabilities.browserVersion = bVersion\n            // lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.currentTest.title\n            lambdaTestCapabilities.capabilities[\"LT:Options\"].name = this.test.title\n            driver = new Builder().usingServer(gridURL).withCapabilities(lambdaTestCapabilities.capabilities).build()\n            await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n            await driver\n            .findElement(By.id(\"sampletodotext\"))\n            .sendKeys(\"Learn Selenium\", Key.RETURN);\n            const todoText = await driver\n            .findElement(By.xpath(\"//li[last()]\"))\n            .getText()\n            .then(function (value) {\n                return value;\n            });\n            todoText.should.equal(\"Learn Selenium\")\n            await driver.quit();\n            console.log(new Date().toLocaleString(\"hu-HU\"))",
              "err": {},
              "uuid": "86c7b6c3-c6f1-4d2b-8d55-e65475bd3129",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe5f728f-d92c-407e-8f18-ba5dc65ccdeb",
            "d6ed2f2e-5fe2-4b33-8f88-0528f32eab9c",
            "86c7b6c3-c6f1-4d2b-8d55-e65475bd3129"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38988,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/Mate/Desktop/seleniumDemo/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}